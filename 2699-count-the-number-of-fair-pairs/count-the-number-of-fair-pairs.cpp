class Solution {
public:
    long long Solve(vector<int>& nums, int limit) {
        int n = nums.size();
        long long count = 0;

        int l = 0, r = n - 1;
        while (l < r) {
            if (nums[l] + nums[r] <= limit) {
                count += (r - l);
                l++;
                
            } else {
                r--;
            }
        }
        return count;
    }

    long long countFairPairs(vector<int>& nums, int lower, int upper) {
        sort(nums.begin(), nums.end());

        return Solve(nums, upper) - Solve(nums, lower - 1);
    }
};



















































































































































































































































































































