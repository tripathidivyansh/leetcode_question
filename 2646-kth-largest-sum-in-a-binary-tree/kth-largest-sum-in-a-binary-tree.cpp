class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        if (!root) return -1;
        vector<long long> levelSums;

        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()) {
            int Size = q.size();

            long long sum = 0;
            for (int i = 0; i < Size; i++) {
                TreeNode* node = q.front();
                q.pop();
                sum += node->val;
                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            levelSums.push_back(sum);
        }

        if (levelSums.size() < k) return -1;
        sort(levelSums.begin(), levelSums.end());
        return levelSums[levelSums.size() - k];
    }
};

















































































































































































































































































































